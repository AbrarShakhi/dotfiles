
let mapleader = " "
set nobackup
set nowritebackup
set updatetime=300
set signcolumn=yes
set title
set path+=**
set nocompatible
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set showcmd
set showmode
syntax on
set relativenumber
set nowrap
set ignorecase
set smartcase
set incsearch
set scrolloff=8
set encoding=utf-8
set nohlsearch
set mouse=a
set clipboard+=unnamedplus
set complete+=kspell
set completeopt=menuone,longest
set splitbelow splitright
set laststatus=2
" set autoindent
set ruler
set incsearch
set shellslash
set viminfofile=~/.cache/viminfo
set backspace=indent,eol,start
" set cino+=L0
filetype indent on
filetype off
setlocal indentkeys-=:

" remap split navigation to just CTRL + hjkl
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" adjust split sizes easier
noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize -3<CR>
noremap <silent> <C-Down> :resize +3<CR>

" open terminal inside vim
map <leader>tt :vnew term://bash<CR>

" open vifm
nnoremap <leader>vs :Vsplit Vifm<CR>

" remap ESC to various keys
:imap Capslock <Esc>

" remove trailing whitespace on save
autocmd BufWritePre * %s/\s\+$//e

" automatically close brackets, parethesis, double quotes, and single quotes
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {; {};<left><left>
inoremap /* /**/<left><left>

" change split windows from vertical to horizontal or vice versa
map <leader>th <C-w>t<C-w>H
map <leader>tk <C-w>t<C-w>K

" keybindings for { ctrl-a to select all
map <C-a> <esc>ggVG<CR>
set belloff=all

" Append template to new C++ files
" autocmd BufNewFile *.cpp 0r tep.cpp


" Compile and run
" Note that the next uncommented line requires the build.sh script!
" Replace it with the commented line below if you don't have it
" set makeprg=g++\ -static\ -DDEBUG\ -lm\ -s\ -x\ c++\ -Wall\ -Wextra\ -O2\ -std=c++17\ -o\ %:r\ %
" set makeprg=build.sh\ %:r
" autocmd filetype cpp nnoremap <F9> :w <bar> Make <CR>
" autocmd filetype cpp nnoremap <F9> :w <bar> !build.sh %:r <CR>
" autocmd filetype cpp nnoremap <F10> :vertical terminal ++shell ++cols=40 ./%:r<CR>
" autocmd filetype cpp nnoremap <F11> :!./%:r<CR>
" autocmd filetype java nnoremap <F9> :w <bar> !javac %<CR>
" autocmd filetype java nnoremap <F10> :vertical terminal ++shell ++cols=40 java %:r<CR>
" autocmd filetype java nnoremap <F11> :!java %:r<CR>

" LaTeX settings
autocmd FileType tex :NoMatchParen
autocmd FileType tex :set tw=110

" Plugin setup
call plug#begin()
    Plug 'tpope/vim-sensible'
    Plug 'lervag/vimtex'
    Plug 'octol/vim-cpp-enhanced-highlight'
    Plug 'catppuccin/vim', { 'as': 'catppuccin' }
    let g:cpp_class_scope_highlight = 1
    let g:cpp_member_variable_highlight = 1
    let g:cpp_class_decl_highlight = 1
    let g:cpp_posix_standard = 1
    let g:cpp_experimental_simple_template_highlight = 1
    let g:cpp_experimental_template_highlight = 1
    let g:cpp_concepts_highlight = 1
    " let c_no_curly_error=1
    " Plug 'tpope/vim-dispatch'
    " Plug 'vim-scripts/errormarker.vim'
call plug#end()

filetype plugin indent on
let g:vimtex_view_general_viewer = 'SumatraPDF'
let g:vimtex_view_general_options = '-reuse-instance @pdf'
let g:vimtex_view_general_options_latexmk = '-reuse-instance'
let g:tex_flavor = 'latex'
let g:vimtex_motion_matchparen = 0
let g:vimtex_fold_manual = 1
let g:vimtex_matchparen_enabled = 0

colorscheme catppuccin_mocha